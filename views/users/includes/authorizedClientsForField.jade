mixin authorizedClientsForField(authorizations, field, fieldID)
    - var wantedAuthorizations = []
    - var displayedLinks = 2;
    - var links = []
    - var popoverLink = '<a href="javascript:;" class="other-authorized-clients" data-container="body" data-toggle="popover" data-placement="top">'

    each authorization in authorizations
        //- Set in `setClientsWantField` middleware
        if (clientsWantField([authorization], field, fieldID))
            - wantedAuthorizations.push(authorization);

    if (wantedAuthorizations.length > 0)
        ul.authorizations-list
            each wantedAuthorization in wantedAuthorizations
                - links.push('<a href="/users/' + escapeHTML(wantedAuthorization.user) + '/authorized-clients/' + escapeHTML(wantedAuthorization.client.id) + '">' + escapeHTML(wantedAuthorization.client.name) + '</a>')
            li
                if links.length <= displayedLinks
                    span.used-by(data-field=field, data-field-id=fieldID)
                        if (links.length === 1)
                            if (field === 'addresses')
                                != __('Accessible from %s', links[0])
                            else
                                != __('Used by %s', links[0])
                        else
                            if (field === 'addresses')
                                != __('Accessible from %s and %s', links.slice(0, -1), links.slice(-1))
                            else
                                != __('Used by %s and %s', links.slice(0, -1), links.slice(-1))
                    span.hidden.updated-on(data-field=field, data-field-id=fieldID)
                        if (field !== 'profil_photo')
                            if (path === '/oauth/authorize')
                                if (links.length === 1)
                                    != __('Will also be updated on %s', links.join(', '))
                                else
                                    != __('Will also be updated on %s and on %s', links.slice(0, -1), links.slice(-1))
                            else
                                if (links.length === 1)
                                    != __('Will be updated on %s', links.join(', '))
                                else
                                    != __('Will be updated on %s and on %s', links.slice(0, -1), links.slice(-1))
                        else
                            if (path === '/oauth/authorize')
                                if (links.length === 1)
                                    != __('Has also been updated on %s', links.join(', '))
                                else
                                    != __('Has also been updated on %s and on %s', links.slice(0, -1), links.slice(-1))
                            else
                                if (links.length === 1)
                                    != __('Has been updated on %s', links.join(', '))
                                else
                                    != __('Has been updated on %s and on %s', links.slice(0, -1), links.slice(-1))
                else
                    span.used-by(data-field=field, data-field-id=fieldID)
                        if (field === 'addresses')
                            != __n('Accessible from %%s and %%s other', 'Accessible from %%s and %%s others', links.length - displayedLinks, links.slice(0, displayedLinks).join(', '), popoverLink + (links.length - displayedLinks) + '</a>')
                        else
                            != __n('Used by %%s and %%s other', 'Used by %%s and %%s others', links.length - displayedLinks, links.slice(0, displayedLinks).join(', '), popoverLink + (links.length - displayedLinks) + '</a>')
                    span.hidden.updated-on(data-field=field, data-field-id=fieldID)
                        if (field !== 'profil_photo')
                            if (path === '/oauth/authorize')
                                != __n('Will also be updated on %%s and %%s other', 'Will also be updated on %%s and %%s others', links.length - displayedLinks, links.slice(0, displayedLinks).join(', '), popoverLink + (links.length - displayedLinks) + '</a>')
                            else
                                != __n('Will be updated on %%s and %%s other', 'Will be updated on %%s and %%s others', links.length - displayedLinks, links.slice(0, displayedLinks).join(', '), popoverLink + (links.length - displayedLinks) + '</a>') 
                        else
                            if (path === '/oauth/authorize')
                                != __n('Has also been updated on %%s and %%s other', 'Has also been updated on %%s and %%s others', links.length - displayedLinks, links.slice(0, displayedLinks).join(', '), popoverLink + (links.length - displayedLinks) + '</a>')
                            else
                                != __n('Has been updated on %%s and %%s other', 'Has been updated on %%s and %%s others', links.length - displayedLinks, links.slice(0, displayedLinks).join(', '), popoverLink + (links.length - displayedLinks) + '</a>')

        div.popover-content.hide
            ul.authorizations-list
                li
                    != links.slice(displayedLinks).join(', ')